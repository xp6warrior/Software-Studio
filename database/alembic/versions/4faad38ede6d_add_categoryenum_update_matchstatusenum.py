"""Add CategoryEnum, update MatchStatusEnum

Revision ID: 4faad38ede6d
Revises: 153b984d507b
Create Date: 2025-06-01 17:13:08.253540

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4faad38ede6d'
down_revision: Union[str, None] = '153b984d507b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('PERSONAL_ITEMS', 'JEWELRY', 'ACCESSORIES', 'TRAVEL_ITEMS', 'ELECTRONIC_DEVICES', 'CLOTHING', 'OFFICE_ITEMS', 'OTHER_ITEMS', name='categoryenum').create(op.get_bind())
    op.alter_column('archiveditems', 'owner_pesel',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=11),
               existing_nullable=False,
               schema='archive')
    op.add_column('accessories', sa.Column('item_id', sa.Integer(), nullable=False), schema='lost_found')
    #NO IDEA IF CORRECT - DATE TO ITEMS TABLE
    #op.add_column('items', sa.Column('date_added', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False), schema='lost_found')
    op.drop_constraint('uq_accessories_item', 'accessories', schema='lost_found', type_='unique')
    op.drop_constraint('pk_accessories_item', 'accessories', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_accessories_item_id', 'accessories', 'items', ['item_id'], ['id'], source_schema='lost_found', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('accessories', 'id', schema='lost_found')
    op.drop_column('accessories', 'item', schema='lost_found')
    op.add_column('clothing', sa.Column('item_id', sa.Integer(), nullable=False), schema='lost_found')
    op.drop_constraint('uq_clothing_item', 'clothing', schema='lost_found', type_='unique')
    op.drop_constraint('fk_clothing_item', 'clothing', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_clothing_item_id', 'clothing', 'items', ['item_id'], ['id'], source_schema='lost_found', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('clothing', 'id', schema='lost_found')
    op.drop_column('clothing', 'item', schema='lost_found')
    op.add_column('electronicdevices', sa.Column('item_id', sa.Integer(), nullable=False), schema='lost_found')
    op.drop_constraint('uq_electronicdevices_item', 'electronicdevices', schema='lost_found', type_='unique')
    op.drop_constraint('fk_electronicdevices_item', 'electronicdevices', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_electronicdevices_item_id', 'electronicdevices', 'items', ['item_id'], ['id'], source_schema='lost_found', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('electronicdevices', 'id', schema='lost_found')
    op.drop_column('electronicdevices', 'item', schema='lost_found')
    op.add_column('items', sa.Column('category', postgresql.ENUM('PERSONAL_ITEMS', 'JEWELRY', 'ACCESSORIES', 'TRAVEL_ITEMS', 'ELECTRONIC_DEVICES', 'CLOTHING', 'OFFICE_ITEMS', 'OTHER_ITEMS', name='categoryenum', create_type=False), nullable=False), schema='lost_found')
    op.drop_constraint('pk_items_email', 'items', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_items_email', 'items', 'accounts', ['email'], ['email'], source_schema='lost_found', referent_schema='accounts', ondelete='CASCADE')
    op.add_column('jewelry', sa.Column('item_id', sa.Integer(), nullable=False), schema='lost_found')
    op.drop_constraint('uq_jewelry_item', 'jewelry', schema='lost_found', type_='unique')
    op.drop_constraint('pk_jewelry_item', 'jewelry', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_jewelry_item_id', 'jewelry', 'items', ['item_id'], ['id'], source_schema='lost_found', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('jewelry', 'id', schema='lost_found')
    op.drop_column('jewelry', 'item', schema='lost_found')
    op.add_column('officeitems', sa.Column('item_id', sa.Integer(), nullable=False), schema='lost_found')
    op.drop_constraint('uq_officeitems_item', 'officeitems', schema='lost_found', type_='unique')
    op.drop_constraint('fk_officeitems_item', 'officeitems', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_officeitems_item_id', 'officeitems', 'items', ['item_id'], ['id'], source_schema='lost_found', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('officeitems', 'id', schema='lost_found')
    op.drop_column('officeitems', 'item', schema='lost_found')
    op.add_column('otheritems', sa.Column('item_id', sa.Integer(), nullable=False), schema='lost_found')
    op.drop_constraint('uq_item', 'otheritems', schema='lost_found', type_='unique')
    op.drop_constraint('fk_otheritems_item', 'otheritems', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_otheritems_item_id', 'otheritems', 'items', ['item_id'], ['id'], source_schema='lost_found', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('otheritems', 'id', schema='lost_found')
    op.drop_column('otheritems', 'item', schema='lost_found')
    op.add_column('personalitems', sa.Column('item_id', sa.Integer(), nullable=False), schema='lost_found')
    op.drop_constraint('uq_personalitems_item', 'personalitems', schema='lost_found', type_='unique')
    op.drop_constraint('pk_personalitems_item', 'personalitems', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_personalitems_item_id', 'personalitems', 'items', ['item_id'], ['id'], source_schema='lost_found', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('personalitems', 'id', schema='lost_found')
    op.drop_column('personalitems', 'item', schema='lost_found')
    op.add_column('travelitems', sa.Column('item_id', sa.Integer(), nullable=False), schema='lost_found')
    op.drop_constraint('uq_travelitems_item', 'travelitems', schema='lost_found', type_='unique')
    op.drop_constraint('fk_travelitems_item', 'travelitems', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_travelitems_item_id', 'travelitems', 'items', ['item_id'], ['id'], source_schema='lost_found', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('travelitems', 'id', schema='lost_found')
    op.drop_column('travelitems', 'item', schema='lost_found')
    op.add_column('matches', sa.Column('status_changed', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False), schema='matches')
    op.drop_constraint('fk_matches_found_item', 'matches', schema='matches', type_='foreignkey')
    op.drop_constraint('fk_matches_lost_item', 'matches', schema='matches', type_='foreignkey')
    op.create_foreign_key('fk_matches_lost_item', 'matches', 'items', ['lost_item_id'], ['id'], source_schema='matches', referent_schema='lost_found', ondelete='CASCADE')
    op.create_foreign_key('fk_matches_found_item', 'matches', 'items', ['found_item_id'], ['id'], source_schema='matches', referent_schema='lost_found', ondelete='CASCADE')
    op.drop_column('matches', 'created_at', schema='matches')
    op.sync_enum_values(
        enum_schema='public',
        enum_name='matchstatusenum',
        new_values=['UNCONFIRMED', 'CONFIRMED', 'DECLINED', 'PICKED_UP', 'FALSE_PICKUP'],
        affected_columns=[TableReference(table_schema='matches', table_name='matches', column_name='status')],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###
    op.create_primary_key('pk_accessories', 'accessories', ['item_id'], schema='lost_found')
    op.create_primary_key('pk_clothing', 'clothing', ['item_id'], schema='lost_found')
    op.create_primary_key('pk_electronicdevices', 'electronicdevices', ['item_id'], schema='lost_found')
    op.create_primary_key('pk_personalitems', 'personalitems', ['item_id'], schema='lost_found')
    op.create_primary_key('pk_officeitems', 'officeitems', ['item_id'], schema='lost_found')
    op.create_primary_key('pk_otheritems', 'otheritems', ['item_id'], schema='lost_found')
    op.create_primary_key('pk_jewelry', 'jewelry', ['item_id'], schema='lost_found')
    op.create_primary_key('pk_travelitems', 'travelitems', ['item_id'], schema='lost_found')
    op.create_check_constraint('ck_archived_pesel', 'archiveditems', 'owner_pesel ~ \'^[0-9]{11}$\'', schema='archive')


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema='public',
        enum_name='matchstatusenum',
        new_values=['UNCONFIRMED', 'CONFIRMED', 'DECLINED'],
        affected_columns=[TableReference(table_schema='matches', table_name='matches', column_name='status')],
        enum_values_to_rename=[],
    )
    op.add_column('matches', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False), schema='matches')
    op.drop_constraint('fk_matches_found_item', 'matches', schema='matches', type_='foreignkey')
    op.drop_constraint('fk_matches_lost_item', 'matches', schema='matches', type_='foreignkey')
    #HERES THE DATA ONE
    #op.drop_column('items', 'date_added', schema='lost_found')
    op.create_foreign_key('fk_matches_lost_item', 'matches', 'items', ['lost_item_id'], ['id'], source_schema='matches', referent_schema='lost_found')
    op.create_foreign_key('fk_matches_found_item', 'matches', 'items', ['found_item_id'], ['id'], source_schema='matches', referent_schema='lost_found')
    op.drop_column('matches', 'status_changed', schema='matches')
    op.add_column('travelitems', sa.Column('item', sa.INTEGER(), autoincrement=False, nullable=False), schema='lost_found')
    op.add_column('travelitems', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False), schema='lost_found')
    op.drop_constraint('fk_travelitems_item_id', 'travelitems', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_travelitems_item', 'travelitems', 'items', ['item'], ['id'], source_schema='lost_found', referent_schema='lost_found')
    op.create_unique_constraint('uq_travelitems_item', 'travelitems', ['item'], schema='lost_found')
    op.drop_column('travelitems', 'item_id', schema='lost_found')
    op.add_column('personalitems', sa.Column('item', sa.INTEGER(), autoincrement=False, nullable=False), schema='lost_found')
    op.add_column('personalitems', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False), schema='lost_found')
    op.drop_constraint('fk_personalitems_item_id', 'personalitems', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('pk_personalitems_item', 'personalitems', 'items', ['item'], ['id'], source_schema='lost_found', referent_schema='lost_found')
    op.create_unique_constraint('uq_personalitems_item', 'personalitems', ['item'], schema='lost_found')
    op.drop_column('personalitems', 'item_id', schema='lost_found')
    op.add_column('otheritems', sa.Column('item', sa.INTEGER(), autoincrement=False, nullable=False), schema='lost_found')
    op.add_column('otheritems', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False), schema='lost_found')
    op.drop_constraint('fk_otheritems_item_id', 'otheritems', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_otheritems_item', 'otheritems', 'items', ['item'], ['id'], source_schema='lost_found', referent_schema='lost_found')
    op.create_unique_constraint('uq_item', 'otheritems', ['item'], schema='lost_found')
    op.drop_column('otheritems', 'item_id', schema='lost_found')
    op.add_column('officeitems', sa.Column('item', sa.INTEGER(), autoincrement=False, nullable=False), schema='lost_found')
    op.add_column('officeitems', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False), schema='lost_found')
    op.drop_constraint('fk_officeitems_item_id', 'officeitems', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_officeitems_item', 'officeitems', 'items', ['item'], ['id'], source_schema='lost_found', referent_schema='lost_found')
    op.create_unique_constraint('uq_officeitems_item', 'officeitems', ['item'], schema='lost_found')
    op.drop_column('officeitems', 'item_id', schema='lost_found')
    op.add_column('jewelry', sa.Column('item', sa.INTEGER(), autoincrement=False, nullable=False), schema='lost_found')
    op.add_column('jewelry', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False), schema='lost_found')
    op.drop_constraint('fk_jewelry_item_id', 'jewelry', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('pk_jewelry_item', 'jewelry', 'items', ['item'], ['id'], source_schema='lost_found', referent_schema='lost_found')
    op.create_unique_constraint('uq_jewelry_item', 'jewelry', ['item'], schema='lost_found')
    op.drop_column('jewelry', 'item_id', schema='lost_found')
    op.drop_constraint('fk_items_email', 'items', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('pk_items_email', 'items', 'accounts', ['email'], ['email'], source_schema='lost_found', referent_schema='accounts')
    op.drop_column('items', 'category', schema='lost_found')
    op.add_column('electronicdevices', sa.Column('item', sa.INTEGER(), autoincrement=False, nullable=False), schema='lost_found')
    op.add_column('electronicdevices', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False), schema='lost_found')
    op.drop_constraint('fk_electronicdevices_item_id', 'electronicdevices', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_electronicdevices_item', 'electronicdevices', 'items', ['item'], ['id'], source_schema='lost_found', referent_schema='lost_found')
    op.create_unique_constraint('uq_electronicdevices_item', 'electronicdevices', ['item'], schema='lost_found')
    op.drop_column('electronicdevices', 'item_id', schema='lost_found')
    op.add_column('clothing', sa.Column('item', sa.INTEGER(), autoincrement=False, nullable=False), schema='lost_found')
    op.add_column('clothing', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False), schema='lost_found')
    op.drop_constraint('fk_clothing_item_id', 'clothing', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('fk_clothing_item', 'clothing', 'items', ['item'], ['id'], source_schema='lost_found', referent_schema='lost_found')
    op.create_unique_constraint('uq_clothing_item', 'clothing', ['item'], schema='lost_found')
    op.drop_column('clothing', 'item_id', schema='lost_found')
    op.add_column('accessories', sa.Column('item', sa.INTEGER(), autoincrement=False, nullable=False), schema='lost_found')
    op.add_column('accessories', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False), schema='lost_found')
    op.drop_constraint('fk_accessories_item_id', 'accessories', schema='lost_found', type_='foreignkey')
    op.create_foreign_key('pk_accessories_item', 'accessories', 'items', ['item'], ['id'], source_schema='lost_found', referent_schema='lost_found')
    op.create_unique_constraint('uq_accessories_item', 'accessories', ['item'], schema='lost_found')
    op.drop_column('accessories', 'item_id', schema='lost_found')
    op.drop_column('archiveditems', 'owner_pesel', schema='archive')
    op.add_column('archiveditems', sa.Column('owner_pesel', sa.Integer(), nullable=False), schema='archive')
    sa.Enum('PERSONAL_ITEMS', 'JEWELRY', 'ACCESSORIES', 'TRAVEL_ITEMS', 'ELECTRONIC_DEVICES', 'CLOTHING', 'OFFICE_ITEMS', 'OTHER_ITEMS', name='categoryenum').drop(op.get_bind())
    # ### end Alembic commands ###
    op.drop_constraint('pk_accessories', 'accessories', type_='primary', schema='lost_found') 
    op.drop_constraint('pk_clothing', 'clothing', type_='primary', schema='lost_found') 
    op.drop_constraint('pk_electronicdevices', 'electronicdevices', type_='primary', schema='lost_found') 
    op.drop_constraint('pk_personalitems', 'personalitems', type_='primary', schema='lost_found') 
    op.drop_constraint('pk_officeitems', 'officeitems', type_='primary', schema='lost_found') 
    op.drop_constraint('pk_otheritems', 'otheritems', type_='primary', schema='lost_found') 
    op.drop_constraint('pk_jewelry', 'jewelry', type_='primary', schema='lost_found') 
    op.drop_constraint('pk_travelitems', 'travelitems', type_='primary', schema='lost_found') 
    op.create_primary_key('pk_accessories', 'accessories', ['id'], schema='lost_found')
    op.create_primary_key('pk_clothing', 'clothing', ['id'], schema='lost_found')
    op.create_primary_key('pk_electronicdevices', 'electronicdevices', ['id'], schema='lost_found')
    op.create_primary_key('pk_personalitems', 'personalitems', ['id'], schema='lost_found')
    op.create_primary_key('pk_officeitems', 'officeitems', ['id'], schema='lost_found')
    op.create_primary_key('pk_otheritems', 'otheritems', ['id'], schema='lost_found')
    op.create_primary_key('pk_jewelry', 'jewelry', ['id'], schema='lost_found')
    op.create_primary_key('pk_travelitems', 'travelitems', ['id'], schema='lost_found')
    op.drop_constraint('ck_archiveditems_pesel', 'archiveditems', type_='check', schema='archive')