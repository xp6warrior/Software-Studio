"""Initial DB Schema

Revision ID: 153b984d507b
Revises: 
Create Date: 2025-05-30 19:07:35.249517

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '153b984d507b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands manually added
    op.execute('' \
    'CREATE SCHEMA IF NOT EXISTS accounts;' \
    'CREATE SCHEMA IF NOT EXISTS lost_found;' \
    'CREATE SCHEMA IF NOT EXISTS matches;' \
    'CREATE SCHEMA IF NOT EXISTS archive;')

    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('UNCONFIRMED', 'CONFIRMED', 'DECLINED', name='matchstatusenum').create(op.get_bind())
    sa.Enum('PEN', 'FOLDER', 'BOOK', 'OTHER', name='officeitemtype').create(op.get_bind())
    sa.Enum('COAT', 'JACKET', 'GLOVES', 'SCARF', 'HAT', 'SHOES', 'OTHER', name='clothingtype').create(op.get_bind())
    sa.Enum('PHONE', 'LAPTOP', 'TABLET', 'CABLE', 'EARBUDS', 'HEADPHONES', 'CAMERA', 'SMARTWATCH', 'POWERBANK', 'OTHER', name='electronicdevicetype').create(op.get_bind())
    sa.Enum('SUITCASE', 'HANDBAG', 'BACKPACK', 'LUGGAGE', 'UMBRELLA', 'WALLET', 'PURSE', 'WATER_BOTTLE', 'OTHER', name='travelitemtype').create(op.get_bind())
    sa.Enum('WOOD', 'METAL', 'PLASTIC', 'GLASS', 'CERAMIC', 'FABRIC', 'LEATHER', 'RUBBER', 'PAPER', 'OTHER', name='materialenum').create(op.get_bind())
    sa.Enum('GLASSES', 'SUNGLASSES', 'WRISTWATCH', 'OTHER', name='accessorytype').create(op.get_bind())
    sa.Enum('XS', 'S', 'M', 'L', 'XL', name='sizeenum').create(op.get_bind())
    sa.Enum('RING', 'EARRINGS', 'NECKLACE', 'PIERCING', 'OTHER', name='jewelrytype').create(op.get_bind())
    sa.Enum('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum').create(op.get_bind())
    sa.Enum('ID_CARD', 'PASSPORT', 'KEYS', 'CREDIT_DEBIT_CARD', 'OTHER', name='personalitemtype').create(op.get_bind())
    sa.Enum('LOST', 'FOUND', name='statusenum').create(op.get_bind())
    sa.Enum('USER', 'WORKER', 'ADMIN', name='roleenum').create(op.get_bind())
    op.create_table('accounts',
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('password', sa.String(length=30), nullable=False),
    sa.Column('role', postgresql.ENUM('USER', 'WORKER', 'ADMIN', name='roleenum', create_type=False), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('surname', sa.String(length=30), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('email', name='pk_accounts'),
    schema='accounts'
    )
    op.create_table('archiveditems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_summary', sa.String(length=255), nullable=False),
    sa.Column('owner_email', sa.String(length=254), nullable=False),
    sa.Column('owner_pesel', sa.Integer(), nullable=False),
    sa.Column('owner_name', sa.String(length=20), nullable=False),
    sa.Column('owner_surname', sa.String(length=30), nullable=False),
    sa.Column('pickup_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_archiveditems'),
    schema='archive'
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', postgresql.ENUM('LOST', 'FOUND', name='statusenum', create_type=False), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.ForeignKeyConstraint(['email'], ['accounts.accounts.email'], name='pk_items_email'),
    sa.PrimaryKeyConstraint('id', name='pk_items'),
    schema='lost_found'
    )
    op.create_table('accessories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', postgresql.ENUM('GLASSES', 'SUNGLASSES', 'WRISTWATCH', 'OTHER', name='accessorytype', create_type=False), nullable=False),
    sa.Column('color', postgresql.ENUM('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum', create_type=False), nullable=False),
    sa.Column('material', postgresql.ENUM('WOOD', 'METAL', 'PLASTIC', 'GLASS', 'CERAMIC', 'FABRIC', 'LEATHER', 'RUBBER', 'PAPER', 'OTHER', name='materialenum', create_type=False), nullable=False),
    sa.Column('brand', sa.String(length=20), nullable=False),
    sa.Column('item', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item'], ['lost_found.items.id'], name='pk_accessories_item'),
    sa.PrimaryKeyConstraint('id', name='pk_accessories'),
    sa.UniqueConstraint('item', name='uq_accessories_item'),
    schema='lost_found'
    )
    op.create_table('clothing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', postgresql.ENUM('COAT', 'JACKET', 'GLOVES', 'SCARF', 'HAT', 'SHOES', 'OTHER', name='clothingtype', create_type=False), nullable=False),
    sa.Column('color', postgresql.ENUM('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum', create_type=False), nullable=False),
    sa.Column('size', postgresql.ENUM('XS', 'S', 'M', 'L', 'XL', name='sizeenum', create_type=False), nullable=False),
    sa.Column('material', postgresql.ENUM('WOOD', 'METAL', 'PLASTIC', 'GLASS', 'CERAMIC', 'FABRIC', 'LEATHER', 'RUBBER', 'PAPER', 'OTHER', name='materialenum', create_type=False), nullable=False),
    sa.Column('brand', sa.String(length=20), nullable=False),
    sa.Column('item', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item'], ['lost_found.items.id'], name='fk_clothing_item'),
    sa.PrimaryKeyConstraint('id', name='pk_clothing'),
    sa.UniqueConstraint('item', name='uq_clothing_item'),
    schema='lost_found'
    )
    op.create_table('electronicdevices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', postgresql.ENUM('PHONE', 'LAPTOP', 'TABLET', 'CABLE', 'EARBUDS', 'HEADPHONES', 'CAMERA', 'SMARTWATCH', 'POWERBANK', 'OTHER', name='electronicdevicetype', create_type=False), nullable=False),
    sa.Column('color', postgresql.ENUM('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum', create_type=False), nullable=False),
    sa.Column('material', postgresql.ENUM('WOOD', 'METAL', 'PLASTIC', 'GLASS', 'CERAMIC', 'FABRIC', 'LEATHER', 'RUBBER', 'PAPER', 'OTHER', name='materialenum', create_type=False), nullable=False),
    sa.Column('brand', sa.String(length=20), nullable=False),
    sa.Column('item', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item'], ['lost_found.items.id'], name='fk_electronicdevices_item'),
    sa.PrimaryKeyConstraint('id', name='pk_electronicdevices'),
    sa.UniqueConstraint('item', name='uq_electronicdevices_item'),
    schema='lost_found'
    )
    op.create_table('jewelry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', postgresql.ENUM('RING', 'EARRINGS', 'NECKLACE', 'PIERCING', 'OTHER', name='jewelrytype', create_type=False), nullable=False),
    sa.Column('color', postgresql.ENUM('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum', create_type=False), nullable=False),
    sa.Column('size', postgresql.ENUM('XS', 'S', 'M', 'L', 'XL', name='sizeenum', create_type=False), nullable=False),
    sa.Column('item', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item'], ['lost_found.items.id'], name='pk_jewelry_item'),
    sa.PrimaryKeyConstraint('id', name='pk_jewelry'),
    sa.UniqueConstraint('item', name='uq_jewelry_item'),
    schema='lost_found'
    )
    op.create_table('officeitems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', postgresql.ENUM('PEN', 'FOLDER', 'BOOK', 'OTHER', name='officeitemtype', create_type=False), nullable=False),
    sa.Column('color', postgresql.ENUM('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum', create_type=False), nullable=False),
    sa.Column('size', postgresql.ENUM('XS', 'S', 'M', 'L', 'XL', name='sizeenum', create_type=False), nullable=False),
    sa.Column('material', postgresql.ENUM('WOOD', 'METAL', 'PLASTIC', 'GLASS', 'CERAMIC', 'FABRIC', 'LEATHER', 'RUBBER', 'PAPER', 'OTHER', name='materialenum', create_type=False), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('item', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item'], ['lost_found.items.id'], name='fk_officeitems_item'),
    sa.PrimaryKeyConstraint('id', name='pk_officeitems'),
    sa.UniqueConstraint('item', name='uq_officeitems_item'),
    schema='lost_found'
    )
    op.create_table('otheritems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('color', postgresql.ENUM('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum', create_type=False), nullable=False),
    sa.Column('size', postgresql.ENUM('XS', 'S', 'M', 'L', 'XL', name='sizeenum', create_type=False), nullable=False),
    sa.Column('material', postgresql.ENUM('WOOD', 'METAL', 'PLASTIC', 'GLASS', 'CERAMIC', 'FABRIC', 'LEATHER', 'RUBBER', 'PAPER', 'OTHER', name='materialenum', create_type=False), nullable=False),
    sa.Column('brand', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('item', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item'], ['lost_found.items.id'], name='fk_otheritems_item'),
    sa.PrimaryKeyConstraint('id', name='pk_otheritems'),
    sa.UniqueConstraint('item', name='uq_item'),
    schema='lost_found'
    )
    op.create_table('personalitems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', postgresql.ENUM('ID_CARD', 'PASSPORT', 'KEYS', 'CREDIT_DEBIT_CARD', 'OTHER', name='personalitemtype', create_type=False), nullable=False),
    sa.Column('color', postgresql.ENUM('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum', create_type=False), nullable=False),
    sa.Column('item', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item'], ['lost_found.items.id'], name='pk_personalitems_item'),
    sa.PrimaryKeyConstraint('id', name='pk_personalitems'),
    sa.UniqueConstraint('item', name='uq_personalitems_item'),
    schema='lost_found'
    )
    op.create_table('travelitems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', postgresql.ENUM('SUITCASE', 'HANDBAG', 'BACKPACK', 'LUGGAGE', 'UMBRELLA', 'WALLET', 'PURSE', 'WATER_BOTTLE', 'OTHER', name='travelitemtype', create_type=False), nullable=False),
    sa.Column('color', postgresql.ENUM('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum', create_type=False), nullable=False),
    sa.Column('size', postgresql.ENUM('XS', 'S', 'M', 'L', 'XL', name='sizeenum', create_type=False), nullable=False),
    sa.Column('material', postgresql.ENUM('WOOD', 'METAL', 'PLASTIC', 'GLASS', 'CERAMIC', 'FABRIC', 'LEATHER', 'RUBBER', 'PAPER', 'OTHER', name='materialenum', create_type=False), nullable=False),
    sa.Column('brand', sa.String(length=20), nullable=False),
    sa.Column('item', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item'], ['lost_found.items.id'], name='fk_travelitems_item'),
    sa.PrimaryKeyConstraint('id', name='pk_travelitems'),
    sa.UniqueConstraint('item', name='uq_travelitems_item'),
    schema='lost_found'
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', postgresql.ENUM('UNCONFIRMED', 'CONFIRMED', 'DECLINED', name='matchstatusenum', create_type=False), nullable=False),
    sa.Column('percentage', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('lost_item_id', sa.Integer(), nullable=False),
    sa.Column('found_item_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('percentage <= 100 AND percentage > 0', name='ck_matches_percentage'),
    sa.ForeignKeyConstraint(['found_item_id'], ['lost_found.items.id'], name='fk_matches_found_item'),
    sa.ForeignKeyConstraint(['lost_item_id'], ['lost_found.items.id'], name='fk_matches_lost_item'),
    sa.PrimaryKeyConstraint('id', name='pk_matches'),
    schema='matches'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('matches', schema='matches')
    op.drop_table('travelitems', schema='lost_found')
    op.drop_table('personalitems', schema='lost_found')
    op.drop_table('otheritems', schema='lost_found')
    op.drop_table('officeitems', schema='lost_found')
    op.drop_table('jewelry', schema='lost_found')
    op.drop_table('electronicdevices', schema='lost_found')
    op.drop_table('clothing', schema='lost_found')
    op.drop_table('accessories', schema='lost_found')
    op.drop_table('items', schema='lost_found')
    op.drop_table('archiveditems', schema='archive')
    op.drop_table('accounts', schema='accounts')
    sa.Enum('USER', 'WORKER', 'ADMIN', name='roleenum').drop(op.get_bind())
    sa.Enum('LOST', 'FOUND', name='statusenum').drop(op.get_bind())
    sa.Enum('ID_CARD', 'PASSPORT', 'KEYS', 'CREDIT_DEBIT_CARD', 'OTHER', name='personalitemtype').drop(op.get_bind())
    sa.Enum('RED', 'GREEN', 'BLUE', 'YELLOW', 'ORANGE', 'PURPLE', 'PINK', 'BROWN', 'BLACK', 'WHITE', 'GRAY', 'CYAN', 'MAROON', 'NAVY', 'BEIGE', 'OTHER', name='colorenum').drop(op.get_bind())
    sa.Enum('RING', 'EARRINGS', 'NECKLACE', 'PIERCING', 'OTHER', name='jewelrytype').drop(op.get_bind())
    sa.Enum('XS', 'S', 'M', 'L', 'XL', name='sizeenum').drop(op.get_bind())
    sa.Enum('GLASSES', 'SUNGLASSES', 'WRISTWATCH', 'OTHER', name='accessorytype').drop(op.get_bind())
    sa.Enum('WOOD', 'METAL', 'PLASTIC', 'GLASS', 'CERAMIC', 'FABRIC', 'LEATHER', 'RUBBER', 'PAPER', 'OTHER', name='materialenum').drop(op.get_bind())
    sa.Enum('SUITCASE', 'HANDBAG', 'BACKPACK', 'LUGGAGE', 'UMBRELLA', 'WALLET', 'PURSE', 'WATER_BOTTLE', 'OTHER', name='travelitemtype').drop(op.get_bind())
    sa.Enum('PHONE', 'LAPTOP', 'TABLET', 'CABLE', 'EARBUDS', 'HEADPHONES', 'CAMERA', 'SMARTWATCH', 'POWERBANK', 'OTHER', name='electronicdevicetype').drop(op.get_bind())
    sa.Enum('COAT', 'JACKET', 'GLOVES', 'SCARF', 'HAT', 'SHOES', 'OTHER', name='clothingtype').drop(op.get_bind())
    sa.Enum('PEN', 'FOLDER', 'BOOK', 'OTHER', name='officeitemtype').drop(op.get_bind())
    sa.Enum('UNCONFIRMED', 'CONFIRMED', 'DECLINED', name='matchstatusenum').drop(op.get_bind())
    # ### end Alembic commands ###

    # ### commands manually added
    op.execute('' \
    'DROP SCHEMA IF EXISTS accounts;' \
    'DROP SCHEMA IF EXISTS lost_found;' \
    'DROP SCHEMA IF EXISTS matches;' \
    'DROP SCHEMA IF EXISTS archive;')